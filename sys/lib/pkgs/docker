#!/usr/bin/env bash
# shellcheck shell=bash
####################################################################
# template
####################################################################
# License:      MIT License
# Repository:	https://github.com/Ragdata/.dotfiles
# Copyright:    Copyright Â© 2025 Redeyed Technologies
####################################################################
# METADATA
####################################################################
# Name:
# Desc:
# Tags:
####################################################################
# FUNCTIONS
####################################################################
#-------------------------------------------------------------------
# CHECK
#-------------------------------------------------------------------
template::check() { dpkg -l | grep template 2> /dev/null 1>&2; return $?; }
#-------------------------------------------------------------------
# PRE INSTALL
#-------------------------------------------------------------------
template::pre_install()
{
	for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt purge -qq -y $pkg; done
	sudo apt update -qq -y
	sudo apt install -qq -y apt-transport-https ca-certificates curl software-properties-common
	sudo install -m 0755 -d /etc/apt/keyrings
	sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
	sudo chmod a+r /etc/apt/keyrings/docker.asc
	if [[ ! -f /etc/apt/sources.list.d/docker.list ]]; then
		echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
			 $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	fi
	sudo apt update -qq -y
}
#-------------------------------------------------------------------
# INSTALL
#-------------------------------------------------------------------
template::install()
{
	sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
	sudo cp "$DOT_ETC/docker/daemon.json" "/etc/docker/daemon.json"
}
#-------------------------------------------------------------------
# POST INSTALL
#-------------------------------------------------------------------
template::post_install()
{
	sudo systemctl enable docker
	sudo systemctl restart docker
}
#-------------------------------------------------------------------
# PRE REMOVE
#-------------------------------------------------------------------
template::pre_remove()
{
	sudo systemctl stop docker
}
#-------------------------------------------------------------------
# REMOVE
#-------------------------------------------------------------------
template::remove()
{
	for pkg in docker-buildx-plugin docker-ce docker-ce-cli docker-ce-rootless-extras docker-compose-plugin containerd.io; do sudo apt remove --purge -y $pkg; done
	sudo apt autoremove -y --purge
	sudo rm -rf /etc/docker
	dir=$(docker info 2>&1 | grep -i "docker root dir" | awk '{print $4}')
	[[ -d "$dir" ]] && sudo rm -rf "$dir"
}
